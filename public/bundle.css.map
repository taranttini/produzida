{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Pele.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { fade, fly } from 'svelte/transition';\n    import Pele from './Pele.svelte'\n    \n    let i = 0;\n    let direc = 1;\n    let width = window.outerWidth;\n    export let name;\n    export let page='';\n\n  const dataList = [\n    { imgUrl: \"oval.png\", title: \"Oval\" },\n    { imgUrl: \"triangulo.png\", title: \"Triangulo\" },\n    { imgUrl: \"retangulo.png\", title: \"Retangulo\" },\n    { imgUrl: \"triangulo_invertido.png\", title: \"Triangulo Invertido\" },\n    { imgUrl: \"ampulheta.png\", title: \"Ampulheta\" }\n  ];\n\n  const colors = [\n    \"#93614A\",\n    \"#30150E\",\n    \"#653618\",\n    \"#56220D\",\n    \"#38160A\",\n    \"#3D1307\",\n    \"#582812\",\n    \"#672614\",\n    \"#FFC190\",\n    \"#EF9F7E\",\n    \"#E6A680\",\n    \"#F4A481\",\n    \"#E9B995\",\n    \"#DFB175\",\n    \"#FFCCA4\",\n    \"#DFBAA8\"\n  ];\n\n    const move = (to, fromId) => {\n        direc = fromId > i ? 1 : -1;\n        i = fromId;\n        page = to;\n    }\n\n/*\n  const bodyChoose = document.querySelector(\"#bodyChoose\");\n  const skinChoose = document.querySelector(\"#skinChoose\");\n  const answer = document.querySelector(\"#answer\");\n  const bodyText = document.querySelector(\"#bodyText\");\n  const skinText = document.querySelector(\"#skinText\");\n  const reset = document.querySelector(\"#reset\");\n\n  const areaCard = document.querySelector(\"#areaCard\");\n  let areaColor = document.querySelector(\"#areaColor\");\n\n  const bodySelect = function(e, value) {\n    e.preventDefault();\n    bodyText.innerText = value;\n    bodyChoose.style.display = \"none\";\n    skinChoose.style.display = \"block\";\n    answer.style.display = \"none\";\n  };\n  const colorSelect = function(e, value) {\n    e.preventDefault();\n    skinText.innerText = value;\n    bodyChoose.style.display = \"none\";\n    skinChoose.style.display = \"none\";\n    answer.style.display = \"block\";\n  };\n\n  const resetSelect = function(e) {\n    e.preventDefault();\n    skinText.innerText = \"\";\n    bodyText.innerText = \"\";\n    bodyChoose.style.display = \"block\";\n    skinChoose.style.display = \"none\";\n    answer.style.display = \"none\";\n  };\n\n  reset.addEventListener(\"click\", resetSelect);\n\n  for (data of dataList) {\n    console.log(data);\n    let el = document.createElement(\"div\");\n    el.className = \"item \";\n    el.innerHTML = template(data.imgUrl, data.title);\n    let value = data.title;\n    el.querySelector(\".mdc-card__media\").addEventListener(\"click\", event => {\n      bodySelect(event, value);\n    });\n    el.querySelector(\".mdc-button\").addEventListener(\"click\", event => {\n      bodySelect(event, value);\n    });\n    areaCard.appendChild(el);\n  }\n\n  for (color of colors) {\n    let el = document.createElement(\"div\");\n    el.className = \"color\";\n    el.style.backgroundColor = color;\n    //el.innerHTML=color;\n    el.innerHTML = \"<div class='area'></div>\";\n    let value = color;\n    el.addEventListener(\"click\", event => {\n      colorSelect(event, value);\n    });\n    areaColor.appendChild(el);\n  }\n */ \n</script>\n\n<style>\n\n.x {position:relative;}\n.x1 {display:flex;flex-direction: row}\n.x div {\n    border: solid 1px #000; \n    top:0px; width: 100%; \n    position: absolute; \n}\n\n/*\n  h1 {\n    color: purple;\n  }\n\n  .demo-card {\n    margin: 0 auto;\n  }\n  .w100 {\n    width: 100%;\n  }\n  #xCard {\n    position: relative;\n    margin: 0 auto;\n    width: 400px;\n    height: 500px;\n  }\n\n  .slide {\n    width: 350px;\n    margin: 0px auto;\n    height: 480px;\n    font-size: 0;\n    scroll-snap-type: mandatory;\n  }\n\n  .slide--horizontal {\n    overflow-y: hidden;\n    overflow-x: scroll;\n    scroll-snap-points-x: repeat(100%);\n    white-space: nowrap;\n  }\n\n  .item {\n    position: relative;\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n  }\n\n  #aareaColor {\n    width: 400px;\n  }\n  .color {\n    width: 100px;\n    height: 100px;\n    float: left;\n    cursor: pointer;\n  }\n  .color .area {\n    width: 100px;\n    height: 100px;\n  }\n  .color .area:hover {\n    background: rgba(255, 255, 255, 0.2);\n    box-shadow: inset 0 0 1px 8px #6200ee;\n  }\n  .tc {\n    text-align: center;\n  }\n\n  @media (max-width: 400px) {\n    .slide,\n    #xCard {\n      width: 95%;\n    }\n  }\n  */\n</style>\n\n<!--<div style=\"display:none\">\nEscolher o tom da pele\nEscolher o formato do rosto (tem que pôr as explicações)\nEscolher a cor dos olhos, (também não tem uma paleta igual ao tom de pele, achei bacana aquilo lá) podemos colocar sim...\nEscolher a cor do cabelo, (vixi é cor demais =) pode até ficar um pouco estranho dependendo da configuração de cor do telefone da pessoa)\nEscolher o formato do corpo, (também precisa pôr o texto)\nE ainda terá um questionário (são passos que precisam estar bem feitos se não fica estranho)\n</div>\n<div> [ {i} {direc} ] </div>\n-->\n\n\n<button on:click=\"{()=>move('pele', 1)}\">pele</button>\n<button on:click=\"{()=>move('rosto', 2)}\">rosto</button>\n<button on:click=\"{()=>move('olhos', 3)}\">olhos</button>\n<button on:click=\"{()=>move('cabelo', 4)}\">cabelo</button>\n<button on:click=\"{()=>move('corpo', 5)}\">corpo</button>\n<button on:click=\"{()=>move('questao', 6)}\">questao</button>\n\n<div class=\"x\">\n{#if page === 'pele'}\n    <div \n        in:fly=\"{{ x: width*direc, duration: 1000 }}\" \n        out:fly={{x:-width*direc, duration:1000}}>\n        <Pele />\n        </div>\n{:else if page === 'rosto'}\n    <div \n        in:fly=\"{{ x: width*direc, duration: 1000 }}\" \n        out:fly={{x:-width*direc, duration:1000}}>\n        rosto\n        </div>\n{:else if page === 'olhos'}\n    <div \n        in:fly=\"{{ x: width*direc, duration: 1000 }}\" \n        out:fly={{x:-width*direc, duration:1000}}>\n        olhos\n        </div>\n{:else if page === 'cabelo'}\n    <div \n        in:fly=\"{{ x: width*direc, duration: 1000 }}\" \n        out:fly={{x:-width*direc, duration:1000}}>\n        cabelo\n        </div>\n{:else if page === 'corpo'}\n    <div \n        in:fly=\"{{ x: width*direc, duration: 1000 }}\" \n        out:fly={{x:-width*direc, duration:1000}}>\n        corpo\n        </div>\n{:else}\n    <div \n        in:fly=\"{{ x: width*direc, duration: 1000 }}\" \n        out:fly={{x:-width*direc, duration:1000}}>\n        INICIANDO\n        </div>\n{/if}\n</div>\n\n<!--\n<div style=\"display:none\">\n<h1>Hello {name}!</h1>\n<h1 class=\"mdc-typography mdc-typography--headline2 tc\">Beta Demo</h1>\n<div id=\"xCard\">\n  <div id=\"bodyChoose\">\n    <h1 class=\"mdc-typography mdc-typography--headline4 tc\">\n      Selecione o formato do corpo\n    </h1>\n    <div id=\"areaCard\" class=\"slide slide--horizontal\" />\n  </div>\n  <div id=\"skinChoose\" style=\"display: none\">\n    <h1 class=\"mdc-typography mdc-typography--headline4 tc\">\n      Selecione a cor da pele\n    </h1>\n    <div id=\"areaColor\" />\n  </div>\n  <div id=\"answer\" style=\"display: none\">\n    <div>\n      <h1 id=\"bodyText\" class=\"mdc-typography mdc-typography--headline4 tc\">\n        A\n      </h1>\n      <h2 id=\"skinText\" class=\"mdc-typography mdc-typography--headline3 tc\">\n        B\n      </h2>\n      <div id=\"reset\" class=\"mdc-card__action-buttons w100\">\n        <button\n          class=\"mdc-button mdc-button--raised w100 mdc-card__action\n          mdc-card__action--button\">\n          Reset\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n-->",
    "\n<script>\n\nimport analyze from 'rgbaster'\nimport nearestColor from 'nearest-color'\nimport resizer from 'image-resizer-js';\n\nvar colors = {\n  claro: '#efddca',\n  claro_frio: '#f1dedc',\n  claro_quente: '#faedb8',\n  claro_olivia: '#efe6c8',\n  medio: '#b18a61',\n  medio_frio: '#997875',\n  medio_quente: 'cba14d',\n  medio_olivia: '#a98b46',\n  escuro: '#532a1c',\n  escuro_frio: '#3e221d',\n  escuro_quente: '795304',\n  escuro_olivia: '#4a4813'\n};\n\n\nlet processingImg = false;\n\nlet colorFound1 = null;\nlet colorFound2 = null;\n\n\nlet urlObject = null;\n\n  const handleCam = async (e) => {\n    colorFound1 = null;\n    colorFound2 = null;\n\n    processingImg = true;\n    var file = e.target.files[0];\n    // Do something with the image file.\n    let _urlObject = URL.createObjectURL(file);\n    \n    let t = await fetch(_urlObject)\n    console.log(1,t);\n    t = await t.arrayBuffer()\n    console.log(2,t);\n    t = await resizer(t, 300, 50);\n    console.log(3,t);\n    \n        const blob = new Blob([t]);\n        const image = new Image();\n    \n        urlObject = URL.createObjectURL(blob);\n    \n    const result = await analyze(urlObject); // also supports base64 encoded image strings\n\n    colorFound1 = nearestColor.from(colors)(result[0].color);\n    colorFound2 = nearestColor.from(colors)(result[1].color);\n    //let y = nearestColor(result[0].color);\n\n    console.log(`The dominant color is ${result[0].color} with ${result[0].count} occurrence(s)`)\n    console.log(`The secondary color is ${result[1].color} with ${result[1].count} occurrence(s)`)\n    \n    processingImg = false;\n  };\n</script>\n\n\n\n\n<div>\n\n<div class=\"img\">\n{#if urlObject}<img id=\"frame\"  alt=ok src={urlObject}/>{/if}\n</div>\n\n<div class=\"photoButton\">\n<h1>ENVIE OU TIRE UMA FOTO DO SEU ROSTO</h1>\n<input type=\"file\" accept=\"image/*\" capture=\"camera\" on:change={handleCam} />\n</div>\n{#if processingImg}\n..processando imagem...\n{:else}\n  {#if colorFound1}\n  <div style=\"background: {colorFound1.value}\">{colorFound1.name} - {colorFound1.value}</div>\n  {/if}\n  {#if colorFound2}\n  <div style=\"background: {colorFound2.value}\">{colorFound2.name} - {colorFound2.value}</div>\n  {/if}\n{/if}\n\n</div>\n\n<style>\n\n.img {display:flex; justify-content:center; background:#444;padding:10px}\n.img img {border: solid 8px #eee;border-radius:4px;box-shadow:0 1px 3px #000}\n\n.photoButton {background: #0c9;position:relative;height:60px;text-align: center}\n.photoButton input {position:absolute;height:100%;width:100%;opacity:0;left:0;top:0}\n</style>"
  ],
  "names": [],
  "mappings": "AAgHA,EAAE,cAAC,CAAC,SAAS,QAAQ,AAAC,CAAC,AAEvB,gBAAE,CAAC,GAAG,cAAC,CAAC,AACJ,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CACtB,IAAI,GAAG,CAAE,KAAK,CAAE,IAAI,CACpB,QAAQ,CAAE,QAAQ,AACtB,CAAC;ACzBD,IAAI,cAAC,CAAC,QAAQ,IAAI,CAAE,gBAAgB,MAAM,CAAE,WAAW,IAAI,CAAC,QAAQ,IAAI,CAAC,AACzE,kBAAI,CAAC,GAAG,cAAC,CAAC,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AAE7E,YAAY,cAAC,CAAC,UAAU,CAAE,IAAI,CAAC,SAAS,QAAQ,CAAC,OAAO,IAAI,CAAC,UAAU,CAAE,MAAM,CAAC,AAChF,0BAAY,CAAC,KAAK,cAAC,CAAC,SAAS,QAAQ,CAAC,OAAO,IAAI,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC"
}